/*
 * generated by Xtext 2.21.0
 */
package org.agileware.natural.words.tests

import com.google.inject.Inject
import org.agileware.natural.words.words.Document
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

import static org.hamcrest.CoreMatchers.*
import static org.hamcrest.MatcherAssert.*

@ExtendWith(InjectionExtension)
@InjectWith(WordsInjectorProvider)
class WordsParsingTest {

	@Inject
	ParseHelper<Document> parseHelper

	@Test
	def void happyPath() {
		val model = parseHelper.parse('''
			The quick brown fox
			Jumps over the lazy dog
			
		''')

		assertThat(model, notNullValue())
		assertThat(model.eResource.errors, equalTo(#[]))
		assertThat(model.sections.size(), equalTo(1))
		assertThat(model.sections.get(0).lines.size(), equalTo(2))
		// It works!
	}

	@Test
	def void noTrailingNewlines() {
		val model = parseHelper.parse('''
			The quick brown fox
			Jumps over the lazy dog
		''')

		assertThat(model, notNullValue())
		assertThat(model.eResource.errors, equalTo(#[]))
		// Fail ^^^ XtextSyntaxDiagnostic: null:2 mismatched input '<EOF>' expecting RULE_NL
		assertThat(model.sections.size(), equalTo(1))
		assertThat(model.sections.get(0).lines.size(), equalTo(2))
	}
}
